spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Basic Spring Boot Config
spring.application.name=ai-insight-dashboard
# Server port set to 8081 as per project requirements
server.port=8081

# Fix for 431 Request Header Fields Too Large
server.max-http-header-size=65536
server.tomcat.max-http-form-post-size=10MB
server.tomcat.max-swallow-size=10MB

# JPA/Hibernate properties
# Возвращаем стандартный режим валидации схемы базы данных
spring.jpa.hibernate.ddl-auto=validate

# Настройки тестовых пользователей
app.security.test-users.enabled=true
app.security.test-users.admin-username=admin
app.security.test-users.admin-password=admin123
app.security.test-users.admin-email=admin@example.com
app.security.test-users.admin-role=ROLE_ADMIN
app.security.test-users.user-username=user
app.security.test-users.user-password=user123
app.security.test-users.user-email=user@example.com
app.security.test-users.user-role=ROLE_USER
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Flyway migration configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true

# Ollama API settings
# URL API для Ollama
ollama.api.url=http://localhost:11434/api/chat
# Модель для генерации ответов
ollama.model=llama2:latest
# 120 секунд максимальное время ожидания ответа от Ollama
ollama.api.timeout=120000

# CORS Configuration
spring.webmvc.cors.allowed-origins=http://localhost:8080,http://localhost:3000
spring.webmvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.webmvc.cors.allowed-headers=*
spring.webmvc.cors.allow-credentials=true
spring.webmvc.cors.max-age=3600

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,loggers,env
management.endpoint.health.show-details=when_authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Metrics Configuration
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.application=${spring.application.name}

# JWT Configuration
jwt.secret=4bW5KpP9zSqQ7rVtXmYgJcLdNeH2aFhUjZ8xE3wA1nCv6TuGiBsDfR5oMpXyZkO0
jwt.expiration=86400

# Logging Configuration - JSON format for better analysis
logging.pattern.console={"timestamp":"%d{yyyy-MM-dd HH:mm:ss}","level":"%level","thread":"%thread","logger":"%logger{36}","message":"%message"}%n
logging.level.com.example.demo=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate=INFO

# OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.disable-swagger-default-url=true
# Уберем явный URL, чтобы предотвратить дублирование путей
# springdoc.swagger-ui.url=/api/v1/api-docs
# Настройка для правильной работы с контекстным путем
springdoc.pathsToMatch=/**

# API Versioning - Base path for all REST endpoints
server.servlet.context-path=/api/v1
